@import "library.cocoascript";

var onFontawesome = function(context) {
  // onRun function with context, json file path, title and font name.
  onRun(context,"fontawesome.json","Font Awesome","FontAwesome");
}

var onMaterial = function(context) {
  // onRun function with context, json file path, title and font name.
  onRun(context,"material.json","Material Icons","Material Icons");
}

var onIon = function(context) {
  // onRun function with context, json file path, title and font name.
  onRun(context,"ion.json","Ion Icons","Ionicons");
}

var onDegreed = function(context) {
  // onRun function with context, json file path, title and font name.
  onRun(context,"degreed.json","Degreed Icons","degreedicons");
}

var onRun = function(context,icon_path,title,fontname) {

  var doc = context.document       // the current document (MSDocument)
  var plugin = context.plugin      // the plugin (MSPluginBundle)
  var page = [doc currentPage]     // the current page (MSPage)
  var icon_source = [plugin urlForResourceNamed:icon_path]

  // call getIcons function from library file.
  var icons = Library.getIcons(icon_source)
  var icon_list = Library.iconValues(icons,fontname)

  // create a wrapper window
  var mainwindow = Library.components.window(title + " - Add an icon with input", "Write an icon name")
  var wrapper = mainwindow[0]
  var content = mainwindow[1]

  var selectedItemIndex = selectedItemIndex || 0

  var searchbox = [[NSTextField alloc] initWithFrame:NSMakeRect(40,175,150,24)]
  [searchbox setBackgroundColor: [NSColor clearColor]];
  [content addSubview:searchbox]

  // copy button for icon name
  submitButton = Library.components.submit("Submit",NSMakeRect(250, 150, 200, 50))
  submitButton.setWantsLayer(true)

  // submit button layer
  var buttonlayer = [CATextLayer layer]
  [buttonlayer setBackgroundColor:[NSColor blackColor]]
  [buttonlayer setForegroundColor:CGColorCreateGenericRGB(215/255, 159/255, 0/255, 1.0)]
  [buttonlayer setFontSize:18];

  // [buttonlayer setFont:[NSFont boldSystemFontOfSize:12]]
  buttonlayer.contentsScale = [[NSScreen mainScreen] backingScaleFactor];
  buttonlayer.string = "+ Add/Change Icon"
  [submitButton setLayer:buttonlayer]
  [submitButton setCOSJSTargetFunction:function(sender) {
    [wrapper orderOut:nil]
    [NSApp stopModalWithCode:NSOKButton]
  }];
  [content addSubview:submitButton]

  [NSApp activateIgnoringOtherApps:true]
  var response = [NSApp runModalForWindow:wrapper];
  var input_value = [searchbox stringValue];
  var finded_icon = Library.searchAlias([input_value lowercaseString],icons)
    
  // if is the response is ok, add icon to the layer
  if (response == NSOKButton) {
    if (finded_icon.alias != undefined) {
      var icon_name     = finded_icon.alias
      var get_selected_icon = Library.escapeUnicode('\\u' + finded_icon.unicode)
      // select the text layer
      var textLayer = page.selectedLayers().firstObject()
      // if is it a text layer run it. if it is not give an error.
      if (textLayer && textLayer.isKindOfClass(MSTextLayer)) {
        // set selected icon as the layer's value
        [textLayer setStringValue: get_selected_icon];
        // set icon name as the layer's name
        [textLayer setName: icon_name];
      } else {
        textLayer = Library.addTextLayer(page, {"text": get_selected_icon, "name": icon_name});
      }
      // set icon font
      [textLayer setFontPostscriptName:fontname];
    } else {
      // give an error to write an icon
      Library.components.alert('You need to write a correct icon name','Please try again that.')
    }
  }

};
